import{S as w,a as S,i as n}from"./assets/vendor-CsWjCmIl.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function a(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(t){if(t.ep)return;t.ep=!0;const r=a(t);fetch(t.href,r)}})();const p=document.querySelector(".gallery"),g=document.querySelector(".loader"),m=new w(".gallery a",{captionsData:"alt",captionDelay:250});function h(e){return e.map(({webformatURL:s,largeImageURL:a,tags:o,likes:t,views:r,comments:i,downloads:b})=>`
      <li class="gallery-item">
        <a href="${a}">
          <img src="${s}" alt="${o}" width="360" height="200" loading="lazy" />
        </a>
        <ul class="image-stats">
          <li class="stat-item"><span class="stat-label">Likes:</span> ${t}</li>
          <li class="stat-item"><span class="stat-label">Views:</span> ${r}</li>
          <li class="stat-item"><span class="stat-label">Comments:</span> ${i}</li>
          <li class="stat-item"><span class="stat-label">Downloads:</span> ${b}</li>
        </ul>
      </li>
    `).join("")}function q(e){p.innerHTML=h(e),m.refresh()}function v(e){p.insertAdjacentHTML("beforeend",h(e)),m.refresh()}function P(){p.innerHTML=""}function E(){g.style.display="inline"}function y(){g.style.display="none"}const $="51669150-fb97c08ffc3fd3823d92d526e",R="https://pixabay.com/api/";async function H(e,s=1,a=15){return(await S.get(R,{params:{key:$,q:e,image_type:"photo",orientation:"horizontal",safesearch:!0,page:s,per_page:a}})).data}const I=document.querySelector(".form"),l=document.querySelector(".load-more");let c=1,d="";const f=15;I.addEventListener("submit",async e=>{e.preventDefault();const s=e.currentTarget.elements["search-text"].value.trim();if(!s){n.warning({title:"Warning",message:"Please enter a search query.",position:"topRight"});return}s!==d&&(c=1,P(),l.style.display="none",d=s),await L()});l.addEventListener("click",async()=>{c++,await L()});async function L(){try{E();const e=await H(d,c,f);if(y(),!e.hits.length){n.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight"}),l.style.display="none";return}if(c===1)q(e.hits),n.success({title:"Success",message:`Found ${e.totalHits} images.`,position:"topRight"});else{v(e.hits);const s=document.querySelectorAll(".gallery .gallery-item");if(s.length>0){const a=s[0].getBoundingClientRect().height;window.scrollBy({top:a*2,behavior:"smooth"})}}c*f>=e.totalHits?(l.style.display="none",n.info({title:"Info",message:"We're sorry, but you've reached the end of search results.",position:"topRight"})):l.style.display="block"}catch(e){y(),n.error({title:"Error",message:"Something went wrong. Please try again later.",position:"topRight"}),console.error(e)}}const u=document.querySelector("input");u.addEventListener("input",()=>{u.value.trim()!==""?u.classList.add("filled"):u.classList.remove("filled")});
//# sourceMappingURL=index.js.map
